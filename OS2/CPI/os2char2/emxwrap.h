/* 
  This is custom exmwrap.h file used to develop IBM compatible 32TEXT API.
  Don't use it in another places.

*/

#define FORMAT_CGA			0x0001
#define FORMAT_4BYTE			0x0003

//#define VQF_PUBLIC			0x0001
//#define VQF_PRIVATE			0x0002

typedef short SHORT;

typedef unsigned short USHORT;
typedef USHORT * PUSHORT;

typedef long LONG;

typedef unsigned long ULONG;
typedef ULONG * PULONG;

typedef USHORT SEL;
typedef SEL * PSEL;

typedef void VOID;
typedef VOID * PVOID;


typedef unsigned char UCHAR;
typedef UCHAR * PUCHAR;

typedef char * PCH;
typedef PCH PCCH;

typedef char * PCSZ;
typedef char * PSZ;

typedef char CHAR;
typedef CHAR STR8[8];
typedef STR8 * PSTR8;

typedef unsigned char BYTE;
typedef BYTE * PBYTE;


#define APIENTRY _System

typedef USHORT APIRET16;

typedef ULONG APIRET;

/* -------------------------- SUBSYSTEMS ---------------------------------- */

#define IO_WAIT				0
#define IO_NOWAIT			1

#define KBDSTF_RIGHTSHIFT		0x0001
#define KBDSTF_LEFTSHIFT		0x0002
#define KBDSTF_CONTROL			0x0004
#define KBDSTF_ALT			0x0008
#define KBDSTF_SCROLLLOCK_ON		0x0010
#define KBDSTF_NUMLOCK_ON		0x0020
#define KBDSTF_CAPSLOCK_ON		0x0040
#define KBDSTF_INSERT_ON		0x0080
#define KBDSTF_LEFTCONTROL		0x0100
#define KBDSTF_LEFTALT			0x0200
#define KBDSTF_RIGHTCONTROL		0x0400
#define KBDSTF_RIGHTALT			0x0800
#define KBDSTF_SCROLLLOCK		0x1000
#define KBDSTF_NUMLOCK			0x2000
#define KBDSTF_CAPSLOCK			0x4000
#define KBDSTF_SYSREQ			0x8000

#define KBDTRF_SHIFT_KEY_IN		0x01
#define KBDTRF_EXTENDED_CODE		0x02
#define KBDTRF_CONVERSION_REQUEST	0x20
#define KBDTRF_FINAL_CHAR_IN		0x40
#define KBDTRF_INTERIM_CHAR_IN		0x80

#define KEYBOARD_ECHO_ON		0x0001
#define KEYBOARD_ECHO_OFF		0x0002
#define KEYBOARD_BINARY_MODE		0x0004
#define KEYBOARD_ASCII_MODE		0x0008
#define KEYBOARD_MODIFY_STATE		0x0010
#define KEYBOARD_MODIFY_INTERIM		0x0020
#define KEYBOARD_MODIFY_TURNAROUND	0x0040
#define KEYBOARD_2B_TURNAROUND		0x0080
#define KEYBOARD_SHIFT_REPORT		0x0100

#define KR_KBDCHARIN			0x00000001
#define KR_KBDPEEK			0x00000002
#define KR_KBDFLUSHBUFFER		0x00000004
#define KR_KBDGETSTATUS			0x00000008
#define KR_KBDSETSTATUS			0x00000010
#define KR_KBDSTRINGIN			0x00000020
#define KR_KBDOPEN			0x00000040
#define KR_KBDCLOSE			0x00000080
#define KR_KBDGETFOCUS			0x00000100
#define KR_KBDFREEFOCUS			0x00000200
#define KR_KBDGETCP			0x00000400
#define KR_KBDSETCP			0x00000800
#define KR_KBDXLATE			0x00001000
#define KR_KBDSETCUSTXT			0x00002000

typedef USHORT HKBD16;
typedef HKBD16 *PHKBD16;

typedef struct _KBDKEYINFO16
{
  UCHAR	 chChar;
  UCHAR	 chScan;
  UCHAR	 fbStatus;
  UCHAR	 bNlsShift;
  USHORT fsState;
  ULONG	 time;
} KBDKEYINFO16;
typedef KBDKEYINFO16 *PKBDKEYINFO16;

typedef struct _KBDINFO
{
  USHORT cb;
  USHORT fsMask;
  USHORT chTurnAround;
  USHORT fsInterim;
  USHORT fsState;
} KBDINFO;
typedef KBDINFO *PKBDINFO;

typedef struct _KBDHWID16
{
  USHORT cb;
  USHORT idKbd;
  USHORT usReserved1;
  USHORT usReserved2;
} KBDHWID16;
typedef KBDHWID16 *PKBDHWID16;

typedef struct _KBDTRANS
{
  UCHAR	 chChar;
  UCHAR	 chScan;
  UCHAR	 fbStatus;
  UCHAR	 bNlsShift;
  USHORT fsState;
  ULONG	 time;
  USHORT fsDD;
  USHORT fsXlate;
  USHORT fsShift;
  USHORT sZero;
} KBDTRANS;
typedef KBDTRANS *PKBDTRANS;

typedef struct _STRINGINBUF16
{
  USHORT cb;
  USHORT cchIn;
} STRINGINBUF16;
typedef STRINGINBUF16 *PSTRINGINBUF16;

APIRET16 APIENTRY EMXKbdCharIn(PKBDKEYINFO16 pkbci, USHORT fWait, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdClose (HKBD16 hkbd);
//APIRET16 APIENTRY EMXKbdDeRegister(VOID);
APIRET16 APIENTRY EMXKbdFlushBuffer (HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdFreeFocus (HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdGetCp (ULONG ulReserved, PUSHORT pidCP, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdGetFocus (USHORT fWait, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdGetHWID (PKBDHWID16 pkbdhwid, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdGetStatus (PKBDINFO pkbdinfo, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdOpen (PHKBD16 phkbd);
APIRET16 APIENTRY EMXKbdPeek (PKBDKEYINFO16 pkbci, HKBD16 hkbd);
//APIRET16 APIENTRY EMXKbdRegister (PCSZ pszModName, PCSZ pszEntryName, ULONG ulFunMask);
APIRET16 APIENTRY EMXKbdSetCp (USHORT usReserved, USHORT idCP, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdSetCustXt (PUSHORT pusCodePage, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdSetFgnd (VOID);
APIRET16 APIENTRY EMXKbdSetHWID (PKBDHWID16 pkbdhwid, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdSetStatus (PKBDINFO pkbdinfo, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdStringIn (PCH pch, PSTRINGINBUF16 pchIn, USHORT fWait, HKBD16 hkbd);
APIRET16 APIENTRY EMXKbdSynch (USHORT fWait);
APIRET16 APIENTRY EMXKbdXlate (PKBDTRANS pkbdtrans, HKBD16 hkbd);


//#define ANSI_OFF			0
//#define ANSI_ON				1

//#define COLORS_2			0x01
//#define COLORS_4			0x02
//#define COLORS_16			0x04

//#define VGMT_OTHER			0x01
//#define VGMT_GRAPHICS			0x02
//#define VGMT_DISABLEBURST		0x04

//#define VP_NOWAIT			0x0000
//#define VP_WAIT				0x0001
//#define VP_OPAQUE			0x0000
//#define VP_TRANSPARENT			0x0002

//#define VMWR_POPUP			0
//#define VMWN_POPUP			0

#define VSRWI_SAVEANDREDRAW		0
#define VSRWI_REDRAW			1

#define VSRWN_SAVE			0
#define VSRWN_REDRAW			1

#define UNDOI_GETOWNER			0
#define UNDOI_RELEASEOWNER		1

#define UNDOK_ERRORCODE			0
#define UNDOK_TERMINATE			1

#define LOCKIO_NOWAIT			0
#define LOCKIO_WAIT			1

#define LOCK_SUCCESS			0
#define LOCK_FAIL			1

#define VCC_SBCSCHAR			0
#define VCC_DBCSFULLCHAR		1
#define VCC_DBCS1STHALF			2
#define VCC_DBCS2NDHALF			3

#define VGFI_GETCURFONT			0
#define VGFI_GETROMFONT			1

#define VIO_CONFIG_CURRENT		0
#define VIO_CONFIG_PRIMARY		1
#define VIO_CONFIG_SECONDARY		2

//#define DISPLAY_MONOCHROME		0
//#define DISPLAY_CGA			1
//#define DISPLAY_EGA			2
//#define DISPLAY_VGA			3
//#define DISPLAY_8514A			7
//#define DISPLAY_IMAGEADAPTER		8
//#define DISPLAY_XGA			9

//#define MONITOR_MONOCHROME		0x0000
//#define MONITOR_COLOR			0x0001
//#define MONITOR_ENHANCED		0x0002
//#define MONITOR_8503			0x0003
//#define MONITOR_851X_COLOR		0x0004
//#define MONITOR_8514			0x0009
//#define MONITOR_FLATPANEL		0x000a
//#define MONITOR_8507_8604		0x000b
//#define MONITOR_8515			0x000c
//#define MONITOR_9515			0x000f
//#define MONITOR_9517			0x0011
//#define MONITOR_9518			0x0012

#define VR_VIOGETCURPOS			0x00000001
#define VR_VIOGETCURTYPE		0x00000002
#define VR_VIOGETMODE			0x00000004
#define VR_VIOGETBUF			0x00000008
#define VR_VIOGETPHYSBUF		0x00000010
#define VR_VIOSETCURPOS			0x00000020
#define VR_VIOSETCURTYPE		0x00000040
#define VR_VIOSETMODE			0x00000080
#define VR_VIOSHOWBUF			0x00000100
#define VR_VIOREADCHARSTR		0x00000200
#define VR_VIOREADCELLSTR		0x00000400
#define VR_VIOWRTNCHAR			0x00000800
#define VR_VIOWRTNATTR			0x00001000
#define VR_VIOWRTNCELL			0x00002000
#define VR_VIOWRTTTY			0x00004000
#define VR_VIOWRTCHARSTR		0x00008000
#define VR_VIOWRTCHARSTRATT		0x00010000
#define VR_VIOWRTCELLSTR		0x00020000
#define VR_VIOSCROLLUP			0x00040000
#define VR_VIOSCROLLDN			0x00080000
#define VR_VIOSCROLLLF			0x00100000
#define VR_VIOSCROLLRT			0x00200000
#define VR_VIOSETANSI			0x00400000
#define VR_VIOGETANSI			0x00800000
#define VR_VIOPRTSC			0x01000000
#define VR_VIOSCRLOCK			0x02000000
#define VR_VIOSCRUNLOCK			0x04000000
#define VR_VIOSAVREDRAWWAIT		0x08000000
#define VR_VIOSAVREDRAWUNDO		0x10000000
#define VR_VIOPOPUP			0x20000000
#define VR_VIOENDPOPUP			0x40000000
#define VR_VIOPRTSCTOGGLE		0x80000000

#define VR_VIOMODEWAIT			0x00000001
#define VR_VIOMODEUNDO			0x00000002
#define VR_VIOGETFONT			0x00000004
#define VR_VIOGETCONFIG			0x00000008
#define VR_VIOSETCP			0x00000010
#define VR_VIOGETCP			0x00000020
#define VR_VIOSETFONT			0x00000040
#define VR_VIOGETSTATE			0x00000080
#define VR_VIOSETSTATE			0x00000100


typedef USHORT HVIO16;
typedef HVIO16 *PHVIO16;


typedef struct _VIOMODEINFO16
{
  USHORT cb;
  UCHAR	 fbType;
  UCHAR	 color;
  USHORT col;
  USHORT row;
  USHORT hres;
  USHORT vres;
  UCHAR	 fmt_ID;
  UCHAR	 attrib;
  ULONG	 buf_addr;
  ULONG	 buf_length;
  ULONG	 full_length;
  ULONG	 partial_length;
  PCH	 ext_data_addr;
} VIOMODEINFO16;
typedef VIOMODEINFO16 *PVIOMODEINFO16;

typedef struct _VIOCONFIGINFO16
{
  USHORT cb;
  USHORT adapter;
  USHORT display;
  ULONG	 cbMemory;
  USHORT Configuration;
  USHORT VDHVersion;
  USHORT Flags;
  ULONG	 HWBufferSize;
  ULONG	 FullSaveSize;
  ULONG	 PartSaveSize;
  USHORT EMAdaptersOFF;
  USHORT EMDisplaysOFF;
} VIOCONFIGINFO16;
typedef VIOCONFIGINFO16 *PVIOCONFIGINFO16;

typedef struct _VIOPHYSBUF
{
  PBYTE pBuf;
  ULONG cb;
  SEL	asel[1];
} VIOPHYSBUF;
typedef VIOPHYSBUF *PVIOPHYSBUF;

typedef struct _VIOPALSTATE
{
  USHORT cb;
  USHORT type;
  USHORT iFirst;
  USHORT acolor[1];
} VIOPALSTATE;
typedef VIOPALSTATE *PVIOPALSTATE;

typedef struct _VIOOVERSCAN
{
  USHORT cb;
  USHORT type;
  USHORT color;
} VIOOVERSCAN;
typedef VIOOVERSCAN *PVIOOVERSCAN;

typedef struct _VIOINTENSITY
{
  USHORT cb;
  USHORT type;
  USHORT fs;
} VIOINTENSITY;
typedef VIOINTENSITY *PVIOINTENSITY;

typedef struct _VIOCOLORREG
{
  USHORT cb;
  USHORT type;
  USHORT firstcolorreg;
  USHORT numcolorregs;
  PCH	 colorregaddr;
} VIOCOLORREG;
typedef VIOCOLORREG *PVIOCOLORREG;

typedef struct _VIOSETULINELOC
{
  USHORT cb;
  USHORT type;
  USHORT scanline;
} VIOSETULINELOC;
typedef VIOSETULINELOC *PVIOSETULINELOC;

typedef struct _VIOSETTARGET
{
  USHORT cb;
  USHORT type;
  USHORT defaultalgorithm;
} VIOSETTARGET;
typedef VIOSETTARGET *PVIOSETTARGET;

typedef struct _VIOCURSORINFO
{
  USHORT yStart;
  USHORT cEnd;
  USHORT cx;
  USHORT attr;
} VIOCURSORINFO;
typedef VIOCURSORINFO *PVIOCURSORINFO;

typedef struct _VIOFONTINFO
{
  USHORT cb;
  USHORT type;
  USHORT cxCell;
  USHORT cyCell;
  ULONG	 pbData;		/* PVOID16 / _far16ptr */
  USHORT cbData;
} VIOFONTINFO;
typedef VIOFONTINFO *PVIOFONTINFO;


APIRET16 APIENTRY EMXVioCheckCharType (PUSHORT pType, USHORT usRow, USHORT usColumn,
    HVIO16 hvio);
//APIRET16 APIENTRY EMXVioDeRegister (VOID);
APIRET16 APIENTRY EMXVioEndPopUp (HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetAnsi (PUSHORT pfAnsi, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetBuf (PULONG pLVB, PUSHORT pcbLVB, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetConfig (USHORT usConfigId, PVIOCONFIGINFO16 pvioin, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetCp (USHORT usReserved, PUSHORT pusCodePage, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetCurPos (PUSHORT pusRow, PUSHORT pusColumn, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetCurType (PVIOCURSORINFO pvioCursorInfo, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetFont (PVIOFONTINFO pviofi, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetMode (PVIOMODEINFO16 pvioModeInfo, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGetPhysBuf (PVIOPHYSBUF pvioPhysBuf, USHORT usReserved);
APIRET16 APIENTRY EMXVioGetState(PVOID pState, HVIO16 hvio);
APIRET16 APIENTRY EMXVioGlobalReg (PCSZ pszModName, PCSZ pszEntryName, ULONG ulFunMask1,
    ULONG ulFunMask2, USHORT usReturn);
APIRET16 APIENTRY EMXVioModeUndo (USHORT usOwnerInd, USHORT usKillInd, USHORT usReserved);
APIRET16 APIENTRY EMXVioModeWait (USHORT usReqType, PUSHORT pNotifyType, USHORT usReserved);
APIRET16 APIENTRY EMXVioPopUp (PUSHORT pfWait, HVIO16 hvio);
APIRET16 APIENTRY EMXVioPrtSc (HVIO16 hvio);
APIRET16 APIENTRY EMXVioPrtScToggle (HVIO16 hvio);
APIRET16 APIENTRY EMXVioReadCellStr (PCH pchCellStr, PUSHORT pcb, USHORT usRow,
    USHORT usColumn, HVIO16 hvio);
APIRET16 APIENTRY EMXVioReadCharStr (PCH pch, PUSHORT pcb, USHORT usRow, USHORT usColumn,
    HVIO16 hvio);
APIRET16 APIENTRY EMXVioRegister (PCSZ pszModName, PCSZ pszEntryName, ULONG ulFunMask1,
    ULONG ulFunMask2);
APIRET16 APIENTRY EMXVioSavRedrawUndo (USHORT usOwnerInd, USHORT usKillInd,
    USHORT usReserved);
APIRET16 APIENTRY EMXVioSavRedrawWait (USHORT usRedrawInd, PUSHORT pusNotifyType,
    USHORT usReserved);
APIRET16 APIENTRY EMXVioScrLock (USHORT fWait, PUCHAR pfNotLocked, HVIO16 hvio);
APIRET16 APIENTRY EMXVioScrollDn (USHORT usTopRow, USHORT usLeftCol, USHORT usBotRow,
    USHORT usRightCol, USHORT cbLines, PBYTE pCell, HVIO16 hvio);
APIRET16 APIENTRY EMXVioScrollLf (USHORT usTopRow, USHORT usLeftCol, USHORT usBotRow,
    USHORT usRightCol, USHORT cbCol, PBYTE pCell, HVIO16 hvio);
APIRET16 APIENTRY EMXVioScrollRt (USHORT usTopRow, USHORT usLeftCol, USHORT usBotRow,
    USHORT usRightCol, USHORT cbCol, PBYTE pCell, HVIO16 hvio);
APIRET16 APIENTRY EMXVioScrollUp (USHORT usTopRow, USHORT usLeftCol, USHORT usBotRow,
    USHORT usRightCol, USHORT cbLines, PBYTE pCell, HVIO16 hvio);
APIRET16 APIENTRY EMXVioScrUnLock (HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetAnsi (USHORT fAnsi, HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetCp (USHORT usReserved, USHORT usCodePage, HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetCurPos (USHORT usRow, USHORT usColumn, HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetCurType (PVIOCURSORINFO pvioCursorInfo, HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetFont (PVIOFONTINFO pviofi, HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetMode (PVIOMODEINFO16 pvioModeInfo, HVIO16 hvio);
APIRET16 APIENTRY EMXVioSetState (PVOID pState, HVIO16 hvio);
APIRET16 APIENTRY EMXVioShowBuf (USHORT offLVB, USHORT cb, HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtCellStr (PCCH pchCellStr, USHORT cb, USHORT usRow,
    USHORT usColumn, HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtCharStr (PCCH pch, USHORT cb, USHORT usRow, USHORT usColumn,
    HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtCharStrAtt (PCCH pch, USHORT cb, USHORT usRow, USHORT usColumn,
    PBYTE pAttr, HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtNAttr (BYTE *pAttr, USHORT cb, USHORT usRow,
    USHORT usColumn, HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtNCell (BYTE *pCell, USHORT cb, USHORT usRow,
    USHORT usColumn, HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtNChar (PCCH pch, USHORT cb, USHORT usRow, USHORT usColumn,
    HVIO16 hvio);
APIRET16 APIENTRY EMXVioWrtTTY (PCCH pch, USHORT cb, HVIO16 hvio);

#define MHK_BUTTON1			0x0001
#define MHK_BUTTON2			0x0002
#define MHK_BUTTON3			0x0004

//#define MOU_NOWAIT			0x0000
//#define MOU_WAIT			0x0001

#define MOUSE_MOTION			0x0001
#define MOUSE_MOTION_WITH_BN1_DOWN	0x0002
#define MOUSE_BN1_DOWN			0x0004
#define MOUSE_MOTION_WITH_BN2_DOWN	0x0008
#define MOUSE_BN2_DOWN			0x0010
#define MOUSE_MOTION_WITH_BN3_DOWN	0x0020
#define MOUSE_BN3_DOWN			0x0040

#define MOUSE_QUEUEBUSY			0x0001
#define MOUSE_BLOCKREAD			0x0002
#define MOUSE_FLUSH			0x0004
#define MOUSE_UNSUPPORTED_MODE		0x0008
#define MOUSE_DISABLED			0x0100
#define MOUSE_MICKEYS			0x0200

#define MOU_NODRAW			0x0001
#define MOU_DRAW			0x0000
#define MOU_MICKEYS			0x0002
#define MOU_PELS			0x0000

#define MR_MOUGETNUMBUTTONS		0x00000001
#define MR_MOUGETNUMMICKEYS		0x00000002
#define MR_MOUGETDEVSTATUS		0x00000004
#define MR_MOUGETNUMQUEEL		0x00000008
#define MR_MOUREADEVENTQUE		0x00000010
#define MR_MOUGETSCALEFACT		0x00000020
#define MR_MOUGETEVENTMASK		0x00000040
#define MR_MOUSETSCALEFACT		0x00000080
#define MR_MOUSETEVENTMASK		0x00000100
#define MR_MOUOPEN			0x00000800
#define MR_MOUCLOSE			0x00001000
#define MR_MOUGETPTRSHAPE		0x00002000
#define MR_MOUSETPTRSHAPE		0x00004000
#define MR_MOUDRAWPTR			0x00008000
#define MR_MOUREMOVEPTR			0x00010000
#define MR_MOUGETPTRPOS			0x00020000
#define MR_MOUSETPTRPOS			0x00040000
#define MR_MOUINITREAL			0x00080000
#define MR_MOUSETDEVSTATUS		0x00100000


typedef USHORT HMOU16;
typedef HMOU16 *PHMOU16;


typedef struct _MOUEVENTINFO16
{
  USHORT fs;
  ULONG	 time;
  SHORT	 row;
  SHORT	 col;
} MOUEVENTINFO16;
typedef MOUEVENTINFO16 *PMOUEVENTINFO16;

typedef struct _MOUQUEINFO16
{
  USHORT cEvents;
  USHORT cmaxEvents;
} MOUQUEINFO16;
typedef MOUQUEINFO16 *PMOUQUEINFO16;

typedef struct _PTRLOC16
{
  USHORT row;
  USHORT col;
} PTRLOC16;
typedef PTRLOC16 *PPTRLOC16;

typedef struct _NOPTRRECT16
{
  USHORT row;
  USHORT col;
  USHORT cRow;
  USHORT cCol;
} NOPTRRECT16;
typedef NOPTRRECT16 *PNOPTRRECT16;

typedef struct _PTRSHAPE
{
  USHORT cb;
  USHORT col;
  USHORT row;
  USHORT colHot;
  USHORT rowHot;
} PTRSHAPE;
typedef PTRSHAPE *PPTRSHAPE;

typedef struct _SCALEFACT16
{
  USHORT rowScale;
  USHORT colScale;
} SCALEFACT16;
typedef SCALEFACT16 *PSCALEFACT16;

typedef struct _THRESHOLD
{
  USHORT Length;
  USHORT Level1;
  USHORT Lev1Mult;
  USHORT Level2;
  USHORT lev2Mult;
} THRESHOLD;
typedef THRESHOLD *PTHRESHOLD;


APIRET16 APIENTRY EMXMouClose (HMOU16 hmou);
APIRET16 APIENTRY EMXMouDeRegister (VOID);
APIRET16 APIENTRY EMXMouDrawPtr (HMOU16 hmou);
APIRET16 APIENTRY EMXMouFlushQue (HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetDevStatus (PUSHORT pfsDevStatus, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetEventMask (PUSHORT pfsEvents, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetNumButtons (PUSHORT pcButtons, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetNumMickeys (PUSHORT pcMickeys, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetNumQueEl (PMOUQUEINFO16 qmouqi, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetPtrPos (PPTRLOC16 pmouLoc, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetPtrShape (PBYTE pBuf, PPTRSHAPE pmoupsInfo, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetScaleFact (PSCALEFACT16 pmouscFactors, HMOU16 hmou);
APIRET16 APIENTRY EMXMouGetThreshold (PTHRESHOLD pthreshold, HMOU16 hmou);
APIRET16 APIENTRY EMXMouInitReal (PCSZ pszDriverName);
APIRET16 APIENTRY EMXMouOpen (PCSZ pszDvrName, PHMOU16 phmou);
APIRET16 APIENTRY EMXMouReadEventQue (PMOUEVENTINFO16 pmouevEvent, PUSHORT pfWait, HMOU16 hmou);
APIRET16 APIENTRY EMXMouRegister (PCSZ pszModName, PCSZ pszEntryName, ULONG ulFunMask);
APIRET16 APIENTRY EMXMouRemovePtr (PNOPTRRECT16 pmourtRect, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSetDevStatus (PUSHORT pfsDevStatus, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSetEventMask (PUSHORT pfsEvents, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSetPtrPos (PPTRLOC16 pmouLoc, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSetPtrShape (PBYTE pBuf, PPTRSHAPE pmoupsInfo, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSetScaleFact (PSCALEFACT16 pmouscFactors, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSetThreshold (PTHRESHOLD pthreshold, HMOU16 hmou);
APIRET16 APIENTRY EMXMouSynch (USHORT fWait);

